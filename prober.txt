#!/usr/bin/python

import easysnmp
import sys,time
from easysnmp import Session
from easysnmp import snmp_get, snmp_walk, exceptions
from easysnmp import *

user_data=sys.argv[1]
a_s=user_data.split(':')
data_address=a_s[0]
data_portnumber=a_s[1]
community=a_s[2]
samp_freq=float(sys.argv[2])
samp=int(sys.argv[3])
samp_time=1/samp_freq
oids=[]
first_oid=[]
second_oid=[]

for i in range(4,len(sys.argv)):
	oids.append(sys.argv[i])
oids.insert(0,'1.3.6.1.2.1.1.3.0')


def probeeasy_snmp():
	global first_oid,first_time
	session=Session(hostname=data_address,remote_port=data_portnumber,community='public',version=2,timeout=1,retries=1)
	response = session.get(oids)
	second_oid=[]



	for p in range(1,len(response)):
		if response[p].value!='NOSUCHOBJECT' and response[p].value!='NOSUCHINSTANCE':
			second_oid.append(int(response[p].value))
			
			
		if count!=0 and len(first_oid)>0:
			numerator = int(second_oid[p-1])-int(first_oid[p-1])
			denominator = round(second_time-first_time,1)
			rate=int(numerator / denominator)
			if rate < 0 :
				if response[p].snmp_type=='COUNTER32':
					numerator=numerator+2**32
					print(str(second_time)+"|"+str(numerator/denominator)+"|")
				elif response[p].snmp_type=='COUNTER64':
					numerator=numerator+2**64
					print(str(second_time)+"|"+str(numerator/denominator)+"|")
			else:
				print(str(second_time)+"|"+str(rate)+"|")
	first_oid = second_oid
	first_time = second_time


if samp==-1:
	count=0
	first_oid=[]
	while True:
		second_time=(time.time())
		probeeasy_snmp()
		reply_time=(time.time())
		count = count + 1
		time.sleep(abs(samp_time - reply_time + second_time))
else:
	first_oid=[]
	for count in range(0,samp+1):
		second_time = (time.time())
		probeeasy_snmp()
		reply_time=(time.time())
		time.sleep(abs(samp_time - reply_time + second_time))
	
